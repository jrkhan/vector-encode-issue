name: Update Issue Embeddings

on:
  issue_comment:
    types: [created]

jobs:
  gate:
    runs-on: ubuntu-latest
    outputs:
      run_embedding: ${{ steps.check_comment_body.outputs.run_embedding }}
    steps:
      - id: check_comment_body
        run: |
          body=$(jq -r .comment.body "$GITHUB_EVENT_PATH" | tr '[:upper:]' '[:lower:]')
          echo "Body: $body"
          if [[ "$body" == "vectorbot embed" ]]; then
            echo "✅ Matched"
            echo "run_embedding=true" >> $GITHUB_OUTPUT
          else
            echo "❌ No match"
            echo "run_embedding=false" >> $GITHUB_OUTPUT
          fi
  update-embedding:
    runs-on: ubuntu-latest
    needs: gate
    if: needs.gate.outputs.run_embedding == 'true' || github.event_name != 'issue_comment'
    steps:  
    - name: Checkout repo
      uses: actions/checkout@v4

    - name: Cache pip dependencies
      uses: actions/cache@v4
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('pyproject.toml') }}
        restore-keys: ${{ runner.os }}-pip-

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.12"

    - name: Install dependencies
      run: pip install .

    - name: Run embedding update
      run: python src/update_embedding_for_issue.py
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        GITHUB_REPO: ${{ github.repository }}
        ISSUE_NUMBER: ${{ github.event.issue.number }}


    - name: Commit and push new embeddings
      run: |
        git config user.name "github-actions"
        git config user.email "github-actions@github.com"
        git add embeddings/
        git diff --cached --quiet || git commit -m "Add/update embedding for issue #${{ github.event.issue.number }}"
        git push
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}